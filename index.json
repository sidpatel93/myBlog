[{"content":"I would admit, the picture above looks delicious, isn\u0026rsquo;t it ?\nI like to present the food ordering application I have created to learn Full-stack Web Development. I had general understanding of the web application and how they are built, but I always wanted to build one from ground up with some of the advance features like real time communication using Web Sockets, user Sessions and Cookie management, integrating text message API, asynchronous operations and more. Furthermore, I wanted to sharpen my skills for AWS by deploying the complete app on AWS platform using some core services like EC2 instances, RDS Database, DynamoDB, Route 53 etc.\nYou can find this application running live on üçï Pizza-N-Go\nLet me start from the features and working of this application, and then I will try to explain the technology I\u0026rsquo;ve used later.\nApplication ¬†This application consist of platform where users and admin(Pizza-n-go restaurant) can interact with each other. First, there is a functionality for a user to sign up and login from the homepage. Admin credentials are hard coded in the database, so all the new users created from the sign-up form will have assigned role as \u0026lsquo;users\u0026rsquo;.\nFrom the homepage it may look simple, but when you log in as a user or as an admin, the portal you interact would be different. Below, I have shown two screens side-by-side. On the right a user has items in carts and on the left this is how a restaurant would see their portal. Notice that restaurant has different functionalities than a regular user, where they can track or adjust the status of the orders.\nYou can notice that when a user adding items in cart, the cart in the navbar is also updating at the same time. To place an order, user have to be logged in. The user cart is managed by user sessions. I will explain about this later in backend technology section.\nOnce a user place an order, they will be redirected to an order tracking page. This page shows the order ID and other details about the order. Along with this web message, an SMS will be sent to the customer cell number that they used while registering. At the same time, the restaurant will receive the notification about the new order. This communication between user and restaurant happens in real-time with Web Socket protocol.\nFrom here, a restaurant can set an estimated time it will require to fulfill this order. When a restaurant set the time and click \u0026lsquo;send SMS\u0026rsquo; button, the status of order will be changed from \u0026lsquo;New\u0026rsquo; to \u0026lsquo;In-Progress\u0026rsquo; and a user will receive a text message about this change along with update on the web portal.\nAt last, the restaurant has an order ready, they can click \u0026lsquo;ready to pickup\u0026rsquo; on their portal. This will move the order from \u0026lsquo;In-Progress\u0026rsquo; to \u0026lsquo;Completed\u0026rsquo; state and a use to receive notification for order pick up on phone and web portal.\nNow, let me explain how some feature in this application are implemented.\nFrontend The front of the application is build using simple HTML, CSS, client side JavaScript and EJS templating engine for JavaScript. All the pictures and details about the food you see on the page is stored in the database. When a user visits the page, the browser will send a request to the server asking for required HTML, CSS and JavaScript files.\nThere is a logic written in these JavaScript files that make asynchronous request to server asking for the images for food and detail to show on the page. I have used a library called Axios to fetch the data.\nNow let\u0026rsquo;s move to the backend or server side logic. This is where all the magic happens.\nBackend - Server logic I have used Node.js with Express framework to write the server logic. Primary reason for choosing this tech stack is that, there are a lot of libraries available for Node.js. Furthermore, I have not done any projects in Node.js before this, so by building the app in Node.js would give me insight in new Technology.\nYou may be intrigued by the real-time communication notification between user and restaurant. This was new to me before I started this project, and it was the primary reason I made this project so that I can learn about the events, Web Sockets in web development. Web socket is a protocol like HTTP. But unlike HTTP, the connection in Web Socket stay open between client and server. Typically, this protocol is used when there is need for real-time communication like chat box, score update during sport tournament etc. I am using Trello API to send SMS to customers.\nThe database is PostgreSQL database. User details, Food items and all the Orders are stored in the database. As I mentioned before, I am using sessions to manage user cart, login status etc for particular user. To keep this information persistent, I am storing them in PostgreSQL database as well. Although I am using this method for storing sessions, this is not a good architecture. Generally, sessions are stored in NoSQL databases like DynamoDB or in-memory databases like Redis.\nDeployment - Amazon Web Services(AWS) I have deployed this application on AWS. The compute layer is deployed on EC2 Linux instances and Database is on the RDS PostgreSQL database. Normally if you deploy node application on EC2 instance, it will stay on until you are connected to it, but to keep it running I have used PM2 library. Nginx web server is load balancing the traffic coming from client.\nThe application is using SSL certification from Certbot. I will post detail blog post for deploying detail instructions how to add SSL certificate and deploy it on any Linux computer.\n","permalink":"https://blog.sidpatel.org/portfolios/pizza-n-go/","summary":"I would admit, the picture above looks delicious, isn\u0026rsquo;t it ?\nI like to present the food ordering application I have created to learn Full-stack Web Development. I had general understanding of the web application and how they are built, but I always wanted to build one from ground up with some of the advance features like real time communication using Web Sockets, user Sessions and Cookie management, integrating text message API, asynchronous operations and more.","title":"Pizza-N-Go: A Full-stack Application"},{"content":"React scheduler with up to five appointments per day. A dynamic and a true single-page application that utilizes various React hooks and states. This app utilizes asynchronous programming and testing tools like Jest for unit testing and integration testing and cypress.io for end-to-end testing.\nYou can find this application running live on React-Interview-Scheduler üóìÔ∏è.\nOnce you open the applicaiton, you may need to wait for three - four seconds or reload to fully load the app. I am using free tier for both services, so this is reasonable considering the price üòú.\nI have hosted this application on Netlify and Heroku using Postgres plugin. The server API on heroku provides the JSON data to the application, which is running on Netlify.\nFinal Product Opening page Landing page, with up to five appointments per day and dynamic counter for the remaining spots.\nCreating a new appointment Allows the creation (or edition) of an appointment, by entering the name and selecting the interviewer.\nContextual warnings and Error handling Warns the user if name field was left empty. As well as provides error when appointment cannot be set.\nTransition states Saving and deleting animated transitions.\nStorybook Component Tests Built-in storybook components tests.\nCypress E2E Tests Built-in cypress end to end tests.\nJest Unit Tests Built-in jest test coverage.\n","permalink":"https://blog.sidpatel.org/portfolios/react-scheduler/","summary":"React scheduler with up to five appointments per day. A dynamic and a true single-page application that utilizes various React hooks and states. This app utilizes asynchronous programming and testing tools like Jest for unit testing and integration testing and cypress.io for end-to-end testing.\nYou can find this application running live on React-Interview-Scheduler üóìÔ∏è.\nOnce you open the applicaiton, you may need to wait for three - four seconds or reload to fully load the app.","title":"Interview-Scheduler: A React application"},{"content":"Introduction Job Comparison App is an Android mobile app which allows a user to compare job offers using customizable settings.\nSystem requirements Job Comparison App requires Android version 10 (Android Q) and Pixel 4 XL.\nFeatures and functionalities Main menu When the app starts, a main menu is displayed and it allows the user to choose one of the four options:\n Enter or edit current job details Enter job offers Adjust the comparison settings Compare job offers (enabled if there are 2 or more jobs).  Enter or update current job When a user clicks the CURRENT JOB button in main menu, user can enter details of the user\u0026rsquo;s current job, and save it for future job comparison. If user has previously saved the Current Job then the data is pre-filled, if not then the input fields would be blank. The following job details can be entered:\n Title Company Location (entered as city and state) Cost of living in the location (expressed as an index) Yearly salary Yearly bonus Allowed weekly telework days (expressed as the number of days per week allowed for remote work, inclusively between 0 to 5 days) Leave time (vacation days and holiday and/or sick leave, as a single overall number of days per year, inclusively between 0 to 260 days) Gym membership allowance (inclusively $0 to $500 annually)  If user chooses to cancel, the current job will not be saved. If user chooses to save, the current job will be saved and can be updated in the future. Once user cancel or save, the app will return to the main menu.\nEnter job offers When a user clicks the ENTER JOB OFFERS button in the main menu. The user will be shown a user interface to enter all of the details of the job offer, which are the same ones listed above for the current job.\nThe following job details can be entered:\n Title Company Location (entered as city and state) Cost of living in the location (expressed as an index) Yearly salary Yearly bonus Allowed weekly telework days (expressed as the number of days per week allowed for remote work, inclusively between 0 to 5 days) Leave time (vacation days and holiday and/or sick leave, as a single overall number of days per year, inclusively between 0 to 260 days) Gym membership allowance (inclusively $0 to $500 annually)  After entered all the details, the user is able to either save the job offer details or cancel.\nAfter save successfully, the user is able to enter another job offer, compare it with current job if current job exist, or return to the main menu.\nAdjust Comparison Settings When a user Click on the COMPARISON SETTINGS on the main menu, a form will open with comparison settings values pre-filled. These values are persistent locally in the device. Initially all the settings has default values of 1. This indicates, that all parameters will be weighted equally when computing a score for the Job offers.\n User can edit these values and assign any integer value including 0 to 100. A numeric Keypad will open to edit the values. These settings fields can not be empty. Two buttons at the bottom of the form allow user to either save the updated settings or return to the main menu without making any changes. Once a user click SAVE button, it will update the settings and redirect to the main menu. A success notification will show on the screen upon successful update.  Compare Jobs User will be shown a list of job offers, including the current job, ranked from best to worst based on the weights set in the comparison settings. Current Job will be clearly labeled above the Job title. User can select two jobs to compare and trigger a comparison using the COMPARE JOBS button. COMPARE JOBS button would be disabled unless two jobs are selected. User can click on the CANCEL button to go back to the main menu.\nOnce a user selects two jobs and clicks COMPARE JOBS button, it will show the comparison in the form of a table displaying the following information about each selected job:\n Title Company Location (city and state) Yearly salary adjusted for cost of living Yearly bonus adjusted for cost of living Allowed weekly telework days Leave time Gym membership allowance  After the comparison, the user can then select to perform another comparison, or go back to the main menu.\n","permalink":"https://blog.sidpatel.org/portfolios/job-comparator/","summary":"Introduction Job Comparison App is an Android mobile app which allows a user to compare job offers using customizable settings.\nSystem requirements Job Comparison App requires Android version 10 (Android Q) and Pixel 4 XL.\nFeatures and functionalities Main menu When the app starts, a main menu is displayed and it allows the user to choose one of the four options:\n Enter or edit current job details Enter job offers Adjust the comparison settings Compare job offers (enabled if there are 2 or more jobs).","title":"Job-Comparator: An Android Application"},{"content":"Overview So you might be wondering, what is this Linked List data structure is ? I will try to explain it in easy to understand fashion.\nYou must be already familiar with the term ‚Äòdata structure‚Äô. Data structure are how we store the data. In most modern programming languages, some data structures come in-built. For example, array or hash map etc. We need to decide which data structure we need to use as per our use case.\nIn certain situation, we need to store complex data in our program to efficiently store and retrieve it. Take an example of how the Facebook might be storing their user data ? Or how banking system keep track of all the account holder and their transactions. In these cases, simple data-structures, like array, will not suffice. We need to develop our own data-structure for this purpose using primitive data-types and structures.\nStructure of linked list Linked list are kind of similar to array in the sense that they are also a linear data-structure. But unlike array, linked list is dynamic, means you can shrink and grow the size of the structure. The data store in linked list are not stored next to each other, but randomly scattered through the memory. You might wonder, well then you how does each data point knows about the next data. I will start with a simple linked list to explain this. There are several other types of linked list, but I will discuss them in a separate post.\nThe linked list store the data in form of Node(not Node.js. duh!!). A Node is a custom data structure that can store a value and the address of the next Node.\n¬†Class Node { constructor(value) { this.value = value this.next = null } } // Instanciate the Node object: let node1 = new Node(‚ÄúHello‚Äù) ¬†The starting point of the list is a reference to the first node, which is referred to as the head. Nearly all linked lists must have a head, because this is effectively the only entry point to the list and all of its elements, and without it, you wouldn‚Äôt know where to start! The end of the list isn‚Äôt a node, but rather a node that points to null, or an empty value.\n¬†¬†Implementing a linked list. Without knowing much about the linked list, we can implement linked list like considering simple explanation I mentioned above.\n¬†Class Node { constructor(value) { this.value = value this.next = null } } // Instanciate the Node object: let node1 = new Node(‚ÄúHello‚Äù) node1.next = new Node(‚ÄúHow‚Äù) node1.next.next = new Node(‚Äúare‚Äù) node1.next.next.next = new Node(‚Äúyou) ¬†The above method gets quite tedious after a while, so we create a separate Linked List class that utilize the existing Node class to store the data and has some method that we can use to operate on data like add new Node, remove Node, search particular value and so on. Let‚Äôs try to implement the linked list structure from this.\n¬†Class SinglyLinkedList { constructor() { this.head = null this.tail = null this.length = 0 } } ¬†That‚Äôs it! It is not so hard as you might have you, right?? Now, as I mentioned before, we need some methods to operate on the data. Currently, we do not have any method in this newly created linked list structure to add the data. Let‚Äôs create a method called ‚Äòpush‚Äô to link/add the node with each other.\n¬†// ‚Ä¶ linked list constructor as above  push(value) { newNode = new Node(value) /* check if the node exist at the head, if not then add new Node at the head position And if the nodes already exist in the linked list then add new node add tail position */ if(!this.head) { This.head = newNode } else { This.tail.next = newNode This.tail = newNode } } ¬†We can define several other methods for the linked list structure like searching for value, adding value at the beginning, removing particular value etc.\nAs we have seen, that linked list store values dynamically in memory, and it is linear structure where each node is connected to another node in linear fashion, so what is the advantage of using linked list compare to an array ??\nUse cases of linked list Think if you were to add the element at the beginning of an array, what would happen ? All the elements in the array need to shift in order to create a place at the beginning. This is operation is O(n). In contrast with linked list, we can add the element/Node at the beginning or at the head position and simply modify the pointer of head and new Node, which requires O(1) time complexity. On the other hand, linked list are not as efficient in searching as array.\nImagine searching for the value in a linked list, You need to traverse the elements one by one to find the value. This is O(n) time complexity. There is no scratching the value with index in linked list since elements are stored randomly in memory. If you ever find yourself having to do something that requires a lot of traversals, iteration, or quick index-level access, a linked list could be your worst enemy. However, if you want to add a bunch of elements to a list and aren‚Äôt worried about finding elements again later, or if you know that you won‚Äôt need to traverse through the entirety of the list often, a linked list could be a good option.\nHopefully this article gave you primary explanation of the linked list. So far, we have only seen the singly linked list, which is most the simplest form of linked list. I am planning to write another post that explain various other linked list types like doubly linked list, circular linked list etc.\n","permalink":"https://blog.sidpatel.org/posts/linked-list/","summary":"Overview So you might be wondering, what is this Linked List data structure is ? I will try to explain it in easy to understand fashion.\nYou must be already familiar with the term ‚Äòdata structure‚Äô. Data structure are how we store the data. In most modern programming languages, some data structures come in-built. For example, array or hash map etc. We need to decide which data structure we need to use as per our use case.","title":"Linked List"},{"content":"Starting my journey to become Software Developer Hi everyone, this is my very first post in my journey to become the Software Engineer/Developer. My educational background is in Mechanical and Industrial Engineering, but ever since I was in the undergraduate school, I was fascinated with the computers. After I finished the undergraduate, I went to pursue a graduate degree in Industrial and Systems Engineering.\nI worked as a Product Engineer for a Manufacturing Company for almost 5 years after graduating from college, but my interest in the computer programming remains. I used to follow web development tutorials from youtube and udemy in free time. When I first started, I did not know where to start and what resources are best for learning how to code.\nThen I bought this book Python Crash Course. I think this is one of the best best book for a beginner who would like to learn the fundamental concepts about computer programming, basic in-built datastructures and Object Oriented Programming. Later I decided to get formal education in the Computer Science, so I started Masters in Computer Science from Georgia Institute of Technology, which is currently in progrress.\nI have created this blog hoping that I will share the content and resources I am using with you all. I hope you will find a thing or two in my posts. It would be diffifult to cram all the resources in one blog post, so I will distribute them among various posts with appropriate tags and categories. You can search the posts by category on the navigation bar.\nI am by no means expert or professional in the field of Software Engineering. I truly appreciate if you can share your thoughts with me as well in the comments or contact me via email.\nFirst Step: Creating a Blog I know it can be quite intemedating to get stated while you are learning to code. In my opinion, it would be quite beneficial if you can create your personal blog early in your learning journey and share the content with others. This will give you kind of accountability and push you to go further. I am little late to get this blog started, but as the saying goes:\n ‚ÄúThe best time to plant a tree was 20 years ago. The second best time is now.‚Äù\n Chinese Proverb   I am using a framework called Hugo to create this blog. It does not have all the bells and whistles that Wordpress offers, but requires much less time setting up and get started compare to Wordpress, which has little learning curve.\nFurthermore, I am using a theme called Papermod. This is amazing and simplistic theme for hugo. You can develop your blog locally to test it. Once you satisfied, then you can purchase a domain name Sites like HostGator or Google Domain and host it on the internet. I have this site hosted on the GitHub Pages, which allows you to host a static site for free.\nI hope the information here is a enough to nudge you in the right direction for creating a blog. If you have any specific question about any of the process mentioned in this post, please feel free to comment below and I will get back to you with detailed explanation.\n","permalink":"https://blog.sidpatel.org/posts/helloworld/","summary":"Starting my journey to become Software Developer Hi everyone, this is my very first post in my journey to become the Software Engineer/Developer. My educational background is in Mechanical and Industrial Engineering, but ever since I was in the undergraduate school, I was fascinated with the computers. After I finished the undergraduate, I went to pursue a graduate degree in Industrial and Systems Engineering.\nI worked as a Product Engineer for a Manufacturing Company for almost 5 years after graduating from college, but my interest in the computer programming remains.","title":"My First Blog"}]